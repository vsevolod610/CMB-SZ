#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Set terms of SZ-effect function
"""

# Imports: built-in
import numpy as np


def XS(x):
    X = x * (np.exp(x) + 1) / (np.exp(x) - 1)
    S = x / np.sinh(x / 2)
    '''
    # zero-case handle, but -30% speed while check np.all
    if np.all(x): # (x != 0) or (0 not in x)
        ...
    else: 
        # x -> 0 => sin(x) / x = 1 but x5 slower
        X = np.real(2 / np.sinc(1j * x / 2 / np.pi) * np.cosh(x / 2))
        S = np.real(2 / np.sinc(1j * x / 2 / np.pi))
    '''
    return X, S


def term_Y1(X, S): return (
        - 10 + 47 / 2 * X - 42 / 5 * X ** 2 + 7 / 10 * X ** 3 
        + S ** 2 * (- 21 / 5 + 7 / 5 * X))


def term_Y2(X, S): return (
        - 15 / 2 + 1023 / 8 * X - 868 / 5 * X ** 2 + 329 / 5 * X ** 3 
        - 44 / 5 * X ** 4 + 11 / 30 * X ** 5 
        + S ** 2 * (- 434 / 5 + 658 / 5 * X - 242 / 5 * X ** 2 
                    + 143 / 30 * X ** 3) 
        + S ** 4 * (- 44 / 5 + 187 / 60 * X))


def term_Y3(X, S): return (
        15 / 2 + 2505 / 8 * X - 7098 / 5 * X ** 2 + 14253 / 10 * X ** 3 
        - 18594 / 35 * X ** 4 + 12059 / 140 * X ** 5 - 128 / 21 * X ** 6 
        + 16 / 105 * X ** 7 
        + S ** 2 * (- 7098 / 10 + 14253 / 5 * X - 102267 / 35 * X ** 2 
                    + 156767 / 140 * X ** 3 - 1216 / 7 * X ** 4 
                    + 64 / 7 * X ** 5) 
        + S ** 4 * (- 18594 / 35 + 205003 / 280 * X - 1920 / 7 * X ** 2 
                    + 1024 / 35 * X ** 3) 
        + S ** 6 * (- 544 / 21 + 992 / 105 * X))


def term_Y4(X, S): return (
        - 135 / 32 + 30375 / 128 * X - 62391 / 10 * X ** 2 
        + 614727 / 40 * X ** 3 - 124389 / 10 * X ** 4 
        + 355703 / 80 * X ** 5 - 16568 / 21 * X ** 6 + 7516 / 105 * X ** 7 
        - 22 / 7 * X ** 8 + 11 / 210 * X ** 9 
        + S ** 2 * (- 62391 / 20 + 614727 / 20 * X - 1368279 / 20 * X ** 2 
                    + 4624139 / 80 * X ** 3 - 157396 / 7 * X ** 4 
                    + 30064 / 7 * X ** 5 - 2717 / 7 * X ** 6 
                    + 2761 / 210 * X ** 7) 
        + S ** 4 * (- 124389 / 10 + 6046951 / 160 * X - 248520 / 7 * X ** 2 
                    + 481024 / 35 * X ** 3 - 15972 / 7 * X ** 4 
                    + 18689 / 140 * X ** 5) 
        + S ** 6 * (- 70414 / 21 + 465992 / 105 * X - 11792 / 7 * X ** 2 
                    + 19778 / 105 * X ** 3) 
        + S ** 8 * (- 682 / 7 + 7601 / 210 * X))


def term_C1(X, S): return (
        10 - 47 / 5 * X + 7 / 5 * X ** 2 + 7 / 10 * S ** 2)


def term_C2(X, S): return (
        25 - 1117 / 10 * X + 847 / 10 * X ** 2 - 183 / 10 * X ** 3 
        + 11 / 10 * X ** 4 
        + S ** 2 * (847 / 20 - 183 / 5 * X + 121 / 20 * X ** 2) 
        + 11 / 10 * S ** 4)


def term_D0(X, S): return (
        - 2 / 3 + 11 / 30 * X)


def term_D1(X, S): return (
        - 4 + 12 * X - 6 * X ** 2 + 19 / 30 * X ** 3 
        + S ** 2 * (- 3 + 19 / 15 * X))

